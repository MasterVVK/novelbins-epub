#!/usr/bin/env python3

import requests
import time
import sys
import os
sys.path.append('/home/user/novelbins-epub/web_app')

from app import create_app, db
from app.models import Novel, Chapter, Translation, Task

app = create_app()

def test_web_editing():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç—É—Ä—ã —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"""
    print("üåê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ï–î–ê–ö–¢–£–†–´ –ß–ï–†–ï–ó –í–ï–ë-–ò–ù–¢–ï–†–§–ï–ô–°")
    print("=" * 60)
    
    base_url = "http://192.168.0.58:5001"
    novel_id = 2
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    print("\nüîç 1. –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò –í–ï–ë-–ü–†–ò–õ–û–ñ–ï–ù–ò–Ø")
    try:
        response = requests.get(f"{base_url}/", timeout=10)
        if response.status_code == 200:
            print("‚úÖ –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–æ–≤–µ–ª–ª—ã
    print(f"\nüìñ 2. –ü–†–û–í–ï–†–ö–ê –°–¢–†–ê–ù–ò–¶–´ –ù–û–í–ï–õ–õ–´")
    try:
        response = requests.get(f"{base_url}/novels/{novel_id}", timeout=10)
        if response.status_code == 200:
            print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–æ–≤–µ–ª–ª—ã –¥–æ—Å—Ç—É–ø–Ω–∞")
            if "–†–µ–¥–∞–∫—Ç—É—Ä–∞" in response.text:
                print("‚úÖ –ö–Ω–æ–ø–∫–∞ '–†–µ–¥–∞–∫—Ç—É—Ä–∞' –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
            else:
                print("‚ùå –ö–Ω–æ–ø–∫–∞ '–†–µ–¥–∞–∫—Ç—É—Ä–∞' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–æ–≤–µ–ª–ª—ã: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
        return
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    print(f"\nüìä 3. –ù–ê–ß–ê–õ–¨–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï")
    with app.app_context():
        novel = Novel.query.get(novel_id)
        if novel:
            print(f"üìñ –ù–æ–≤–µ–ª–ª–∞: {novel.title}")
            print(f"üìà –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ –≥–ª–∞–≤: {novel.edited_chapters}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤—ã –≥–æ—Ç–æ–≤—ã–µ –∫ —Ä–µ–¥–∞–∫—Ç—É—Ä–µ
        ready_chapters = Chapter.query.filter_by(
            novel_id=novel_id,
            status='translated',
            is_active=True
        ).count()
        print(f"üìù –ì–ª–∞–≤ –≥–æ—Ç–æ–≤—ã—Ö –∫ —Ä–µ–¥–∞–∫—Ç—É—Ä–µ: {ready_chapters}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏
        active_tasks = Task.query.filter_by(
            novel_id=novel_id,
            task_type='editing',
            status='running'
        ).count()
        print(f"üéØ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á —Ä–µ–¥–∞–∫—Ç—É—Ä—ã: {active_tasks}")
    
    # 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–¥–∞–∫—Ç—É—Ä—É
    print(f"\nüöÄ 4. –ó–ê–ü–£–°–ö –†–ï–î–ê–ö–¢–£–†–´ –ß–ï–†–ï–ó –í–ï–ë-–ò–ù–¢–ï–†–§–ï–ô–°")
    editing_url = f"{base_url}/novels/{novel_id}/start-editing"
    
    try:
        print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å: {editing_url}")
        response = requests.post(editing_url, timeout=30)
        print(f"üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–¥–∞–∫—Ç—É—Ä—É —É—Å–ø–µ—à–µ–Ω")
            print(f"üìÑ –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(response.content)} –±–∞–π—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç
            if "novels/2" in response.url:
                print("‚úÖ –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–æ–≤–µ–ª–ª—ã –≤—ã–ø–æ–ª–Ω–µ–Ω")
            else:
                print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç: {response.url}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text[:200]}...")
            return
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return
    
    # 5. –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    print(f"\nüìà 5. –ú–û–ù–ò–¢–û–†–ò–ù–ì –ò–ó–ú–ï–ù–ï–ù–ò–ô")
    for i in range(10):  # 10 –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø–æ 10 —Å–µ–∫—É–Ω–¥
        time.sleep(10)
        
        with app.app_context():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–∞—á–∏
            tasks = Task.query.filter_by(
                novel_id=novel_id,
                task_type='editing'
            ).order_by(Task.created_at.desc()).limit(3).all()
            
            print(f"\n  [{i+1:2d}] –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ {10*(i+1)} —Å–µ–∫:")
            print(f"      –ó–∞–¥–∞—á —Ä–µ–¥–∞–∫—Ç—É—Ä—ã: {len(tasks)}")
            
            for task in tasks:
                print(f"        –ó–∞–¥–∞—á–∞ {task.id}: {task.status} (–ø—Ä–æ–≥—Ä–µ—Å—Å: {task.progress})")
                if task.error_message:
                    print(f"          ‚ùå –û—à–∏–±–∫–∞: {task.error_message}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≥–ª–∞–≤—ã
            edited_chapters = Chapter.query.filter_by(
                novel_id=novel_id,
                status='edited',
                is_active=True
            ).count()
            print(f"      –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≥–ª–∞–≤: {edited_chapters}")
            
            # –ï—Å–ª–∏ –≤—Å–µ –≥–ª–∞–≤—ã –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω—ã, –∑–∞–≤–µ—Ä—à–∞–µ–º
            if edited_chapters >= 3:
                print(f"      ‚úÖ –í—Å–µ –≥–ª–∞–≤—ã –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω—ã!")
                break
    
    # 6. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    print(f"\nüìä 6. –§–ò–ù–ê–õ–¨–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï")
    with app.app_context():
        novel = Novel.query.get(novel_id)
        if novel:
            print(f"üìñ –ù–æ–≤–µ–ª–ª–∞: {novel.title}")
            print(f"üìà –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ –≥–ª–∞–≤: {novel.edited_chapters}")
        
        chapters = Chapter.query.filter_by(
            novel_id=novel_id,
            is_active=True
        ).order_by(Chapter.chapter_number).all()
        
        print(f"\nüìã –°–¢–ê–¢–£–°–´ –ì–õ–ê–í:")
        for chapter in chapters:
            print(f"  –ì–ª–∞–≤–∞ {chapter.chapter_number}: {chapter.status}")
            if chapter.status == 'edited':
                edited_translations = [t for t in chapter.translations if t.translation_type == 'edited']
                if edited_translations:
                    print(f"    üìÑ –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤: {len(edited_translations)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
        completed_tasks = Task.query.filter_by(
            novel_id=novel_id,
            task_type='editing',
            status='completed'
        ).count()
        print(f"\nüéØ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á —Ä–µ–¥–∞–∫—Ç—É—Ä—ã: {completed_tasks}")
    
    print(f"\n‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")

if __name__ == "__main__":
    test_web_editing() 