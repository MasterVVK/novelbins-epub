#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ czbooks.net —Å –°–£–©–ï–°–¢–í–£–Æ–©–ò–ú–ò cookies –≤ headless —Ä–µ–∂–∏–º–µ
"""
import sys
sys.path.insert(0, '.')

from parsers import create_parser_from_url

def test_with_existing_cookies():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ cookies"""
    print("=" * 70)
    print("üß™ –¢–ï–°–¢: –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ Cookies –≤ Headless —Ä–µ–∂–∏–º–µ")
    print("=" * 70)

    url = "https://czbooks.net/n/ul6pe"
    # Cookies –∏–∑ –ë–î (novel ID 11)
    cookies = "AviviD_ios_uuid=c674dabf-8a10-4ba3-a0f4-87e74633d195; AviviD_uuid=c674dabf-8a10-4ba3-a0f4-87e74633d195; webuserid=25545b2d-39ba-ebf8-8eb0-4ad882189bea; ch_tracking_uuid=1; AviviD_session_id=1760357347"

    print(f"üìç URL: {url}")
    print(f"üç™ Cookies –∏–∑ –ë–î: {len(cookies)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"üîç –†–µ–∂–∏–º: headless=True (–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ)")
    print()

    try:
        print("1Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä –≤ HEADLESS —Ä–µ–∂–∏–º–µ —Å cookies...")
        parser = create_parser_from_url(url, auth_cookies=cookies, headless=True)
        print(f"   ‚úÖ –ü–∞—Ä—Å–µ—Ä: {parser.__class__.__name__}")
        print(f"   üñ•Ô∏è Headless: {parser.headless}")
        print()

        print("2Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥–ª–∞–≤...")
        chapters = parser.get_chapter_list(url)

        if not chapters:
            print("   ‚ùå –ì–ª–∞–≤—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–≤–æ–∑–º–æ–∂–Ω–∞ 403 –æ—à–∏–±–∫–∞)!")
            parser.close()
            return False

        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –≥–ª–∞–≤: {len(chapters)}")
        print()

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –≥–ª–∞–≤—ã
        print("üìñ –ü–µ—Ä–≤—ã–µ 3 –≥–ª–∞–≤—ã:")
        for i, chapter in enumerate(chapters[:3], 1):
            print(f"   {i}. {chapter['title']}")
        print()

        # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Ä–≤—É—é –≥–ª–∞–≤—É
        print("3Ô∏è‚É£ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–µ—Ä–≤–æ–π –≥–ª–∞–≤—ã...")
        first_chapter = chapters[0]
        content_data = parser.get_chapter_content(first_chapter['url'])

        if not content_data or not content_data.get('content'):
            print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ!")
            parser.close()
            return False

        content = content_data['content']
        print(f"   ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {len(content)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   üìù –ü–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤:")
        print(f"   {content[:200]}...")
        print()

        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–∞—Ä—Å–µ—Ä
        parser.close()

        print("=" * 70)
        print("‚úÖ‚úÖ‚úÖ –û–¢–õ–ò–ß–ù–û! ‚úÖ‚úÖ‚úÖ")
        print("=" * 70)
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(f"   ‚Ä¢ –ù–∞–π–¥–µ–Ω–æ –≥–ª–∞–≤: {len(chapters)}")
        print(f"   ‚Ä¢ –ü–µ—Ä–≤–∞—è –≥–ª–∞–≤–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {len(content)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   ‚Ä¢ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ cookies –†–ê–ë–û–¢–ê–Æ–¢ –≤ headless —Ä–µ–∂–∏–º–µ!")
        print(f"   ‚Ä¢ –ü—Ä–æ–±–ª–µ–º–∞ 403 —Ä–µ—à–µ–Ω–∞!")
        print("=" * 70)

        return True

    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_with_existing_cookies()
    sys.exit(0 if success else 1)
