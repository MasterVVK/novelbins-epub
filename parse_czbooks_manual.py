#!/usr/bin/env python3
"""
–†—É—á–Ω–æ–π –ø–∞—Ä—Å–∏–Ω–≥ czbooks.net –Ω–æ–≤–µ–ª–ª—ã —á–µ—Ä–µ–∑ Xvfb
"""
import sys
sys.path.insert(0, '.')
sys.path.insert(0, 'web_app')

from parsers import create_parser_from_url

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –ë–î
url = "https://czbooks.net/n/ul6pe"
proxy = "socks5://192.168.0.61:1080"

print("=" * 70)
print("üöÄ –†–£–ß–ù–û–ô –ü–ê–†–°–ò–ù–ì CZBOOKS.NET")
print("=" * 70)
print(f"URL: {url}")
print(f"–ü—Ä–æ–∫—Å–∏: {proxy}")
print()

# –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä
print("1Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä...")
parser = create_parser_from_url(url, socks_proxy=proxy, headless=False)
print("   ‚úÖ –ü–∞—Ä—Å–µ—Ä —Å–æ–∑–¥–∞–Ω")
print()

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥–ª–∞–≤
print("2Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥–ª–∞–≤...")
chapters = parser.get_chapter_list(url)
print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –≥–ª–∞–≤: {len(chapters)}")
print()

if not chapters:
    print("‚ùå –ì–ª–∞–≤—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
    parser.close()
    sys.exit(1)

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 –≥–ª–∞–≤
print("üìñ –ü–µ—Ä–≤—ã–µ 10 –≥–ª–∞–≤:")
for i, ch in enumerate(chapters[:10], 1):
    print(f"   {i}. {ch['title']}")
print()

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
print("3Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–ª–∞–≤—ã –≤ –ë–î...")
from app import create_app, db
from app.models import Novel, Chapter

app = create_app()
with app.app_context():
    novel = Novel.query.get(11)
    if not novel:
        print("‚ùå –ù–æ–≤–µ–ª–ª–∞ ID 11 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ë–î")
        parser.close()
        sys.exit(1)

    print(f"   –ù–æ–≤–µ–ª–ª–∞: {novel.title}")
    print(f"   –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–ª–∞–≤—ã (–ø–µ—Ä–≤—ã–µ 10 –¥–ª—è —Ç–µ—Å—Ç–∞)...")

    saved_count = 0
    for i, ch in enumerate(chapters[:10], 1):  # –ü–µ—Ä–≤—ã–µ 10 –¥–ª—è —Ç–µ—Å—Ç–∞
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
        existing = Chapter.query.filter_by(novel_id=11, chapter_number=i).first()
        if existing:
            print(f"   ‚è≠Ô∏è –ì–ª–∞–≤–∞ {i} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            continue

        print(f"   üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–ª–∞–≤—É {i}: {ch['title'][:40]}...")

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
        content_data = parser.get_chapter_content(ch['url'])
        if not content_data or not content_data.get('content'):
            print(f"   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –≥–ª–∞–≤—ã {i}")
            continue

        content = content_data['content']

        # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤—É
        chapter = Chapter(
            novel_id=11,
            chapter_number=i,
            original_title=ch['title'],
            url=ch['url'],
            original_text=content,
            word_count_original=len(content),
            status='parsed'
        )
        db.session.add(chapter)
        db.session.commit()

        saved_count += 1
        print(f"   ‚úÖ –ì–ª–∞–≤–∞ {i} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ ({len(content)} —Å–∏–º–≤–æ–ª–æ–≤)")

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–æ–≤–µ–ª–ª—ã
    novel.total_chapters = len(chapters)
    novel.parsed_chapters = saved_count
    novel.status = 'parsed'
    db.session.commit()

    print()
    print("=" * 70)
    print("‚úÖ –ü–ê–†–°–ò–ù–ì –ó–ê–í–ï–†–®–ï–ù!")
    print("=" * 70)
    print(f"–í—Å–µ–≥–æ –≥–ª–∞–≤ –Ω–∞–π–¥–µ–Ω–æ: {len(chapters)}")
    print(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –ë–î: {saved_count}")
    print("=" * 70)

parser.close()
