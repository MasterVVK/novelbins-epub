#!/usr/bin/env python3

import sys
import os
sys.path.append('/home/user/novelbins-epub/web_app')

from app import create_app, db
from app.models import Novel, Chapter, Translation

app = create_app()

with app.app_context():
    print("üß™ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç EditorService...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≥–ª–∞–≤—É
    chapter = Chapter.query.filter_by(
        novel_id=2,
        chapter_number=1,
        is_active=True
    ).first()
    
    if not chapter:
        print("‚ùå –ì–ª–∞–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        exit(1)
    
    print(f"üìñ –ù–∞–π–¥–µ–Ω–∞ –≥–ª–∞–≤–∞: {chapter.original_title}")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–µ—Ä–µ–≤–æ–¥
    latest_translation = Translation.query.filter_by(
        chapter_id=chapter.id
    ).order_by(Translation.created_at.desc()).first()
    
    if not latest_translation:
        print("‚ùå –ü–µ—Ä–µ–≤–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        exit(1)
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø–µ—Ä–µ–≤–æ–¥ –¥–ª–∏–Ω–æ–π {len(latest_translation.translated_text)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"üìù –ù–∞—á–∞–ª–æ —Ç–µ–∫—Å—Ç–∞: {latest_translation.translated_text[:100]}...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º EditorService
    try:
        from app.services.translator_service import TranslatorService
        from app.services.editor_service import EditorService
        
        print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º TranslatorService...")
        translator_service = TranslatorService()
        print("‚úÖ TranslatorService –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º EditorService...")
        editor_service = EditorService(translator_service)
        print("‚úÖ EditorService –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        print("üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º edit_chapter...")
        success = editor_service.edit_chapter(chapter)
        
        if success:
            print("‚úÖ –†–µ–¥–∞–∫—Ç—É—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("‚ùå –†–µ–¥–∞–∫—Ç—É—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–æ–π")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc() 