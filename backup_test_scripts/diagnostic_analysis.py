#!/usr/bin/env python3

import sys
import os
sys.path.append('/home/user/novelbins-epub/web_app')

from app import create_app, db
from app.models import Novel, Chapter, Translation, Task

app = create_app()

def analyze_editing_problem():
    """–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–µ–¥–∞–∫—Ç—É—Ä–æ–π"""
    print("üîç –ö–û–ú–ü–õ–ï–ö–°–ù–´–ô –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´ –†–ï–î–ê–ö–¢–£–†–´")
    print("=" * 60)
    
    with app.app_context():
        # 1. –ê–Ω–∞–ª–∏–∑ –Ω–æ–≤–µ–ª–ª—ã
        print("\nüìö 1. –ê–ù–ê–õ–ò–ó –ù–û–í–ï–õ–õ–´")
        novel = Novel.query.get(2)
        if not novel:
            print("‚ùå –ù–æ–≤–µ–ª–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            return
        
        print(f"üìñ –ù–∞–∑–≤–∞–Ω–∏–µ: {novel.title}")
        print(f"üìä –°—Ç–∞—Ç—É—Å: {novel.status}")
        print(f"üìà –ì–ª–∞–≤ –≤—Å–µ–≥–æ: {novel.total_chapters}")
        print(f"üìà –ì–ª–∞–≤ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–æ: {novel.parsed_chapters}")
        print(f"üìà –ì–ª–∞–≤ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ: {novel.translated_chapters}")
        print(f"üìà –ì–ª–∞–≤ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ: {novel.edited_chapters}")
        
        # 2. –ê–Ω–∞–ª–∏–∑ –≥–ª–∞–≤
        print("\nüìã 2. –ê–ù–ê–õ–ò–ó –ì–õ–ê–í")
        chapters = Chapter.query.filter_by(novel_id=2, is_active=True).order_by(Chapter.chapter_number).all()
        
        for chapter in chapters:
            print(f"\n  –ì–ª–∞–≤–∞ {chapter.chapter_number}: {chapter.original_title}")
            print(f"    –°—Ç–∞—Ç—É—Å: {chapter.status}")
            print(f"    –ü–µ—Ä–µ–≤–æ–¥–æ–≤: {len(chapter.translations)}")
            
            if chapter.translations:
                for i, trans in enumerate(chapter.translations):
                    print(f"      –ü–µ—Ä–µ–≤–æ–¥ {i+1}: {trans.translation_type} ({trans.api_used}) - {len(trans.translated_text)} —Å–∏–º–≤–æ–ª–æ–≤")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Ä–µ–¥–∞–∫—Ç—É—Ä–µ
            if chapter.status == 'translated' and chapter.current_translation:
                print(f"    ‚úÖ –ì–û–¢–û–í–ê –ö –†–ï–î–ê–ö–¢–£–†–ï")
            elif chapter.status == 'edited':
                print(f"    ‚úÖ –£–ñ–ï –û–¢–†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ê")
            else:
                print(f"    ‚ùå –ù–ï –ì–û–¢–û–í–ê –ö –†–ï–î–ê–ö–¢–£–†–ï")
        
        # 3. –ê–Ω–∞–ª–∏–∑ –∑–∞–¥–∞—á —Ä–µ–¥–∞–∫—Ç—É—Ä—ã
        print("\nüéØ 3. –ê–ù–ê–õ–ò–ó –ó–ê–î–ê–ß –†–ï–î–ê–ö–¢–£–†–´")
        editing_tasks = Task.query.filter_by(novel_id=2, task_type='editing').order_by(Task.created_at.desc()).all()
        
        if not editing_tasks:
            print("  ‚ùå –ó–∞–¥–∞—á —Ä–µ–¥–∞–∫—Ç—É—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        else:
            for task in editing_tasks:
                print(f"\n  –ó–∞–¥–∞—á–∞ {task.id}:")
                print(f"    –°—Ç–∞—Ç—É—Å: {task.status}")
                print(f"    –ü—Ä–æ–≥—Ä–µ—Å—Å: {task.progress}")
                print(f"    –°–æ–∑–¥–∞–Ω–∞: {task.created_at}")
                print(f"    –ù–∞—á–∞—Ç–∞: {task.started_at}")
                print(f"    –ó–∞–≤–µ—Ä—à–µ–Ω–∞: {task.completed_at}")
                if task.error_message:
                    print(f"    ‚ùå –û—à–∏–±–∫–∞: {task.error_message}")
                if task.result:
                    print(f"    üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç: {task.result}")
        
        # 4. –ü–æ–∏—Å–∫ –≥–ª–∞–≤ –≥–æ—Ç–æ–≤—ã—Ö –∫ —Ä–µ–¥–∞–∫—Ç—É—Ä–µ
        print("\nüéØ 4. –ì–õ–ê–í–´ –ì–û–¢–û–í–´–ï –ö –†–ï–î–ê–ö–¢–£–†–ï")
        ready_chapters = Chapter.query.filter_by(
            novel_id=2,
            status='translated',
            is_active=True
        ).order_by(Chapter.chapter_number).all()
        
        if not ready_chapters:
            print("  ‚ùå –ù–µ—Ç –≥–ª–∞–≤ –≥–æ—Ç–æ–≤—ã—Ö –∫ —Ä–µ–¥–∞–∫—Ç—É—Ä–µ")
        else:
            print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(ready_chapters)} –≥–ª–∞–≤ –≥–æ—Ç–æ–≤—ã—Ö –∫ —Ä–µ–¥–∞–∫—Ç—É—Ä–µ:")
            for chapter in ready_chapters:
                print(f"    - –ì–ª–∞–≤–∞ {chapter.chapter_number}: {chapter.original_title}")
        
        # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        print("\n‚öôÔ∏è 5. –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø")
        if novel.config:
            print(f"  –ú–∞–∫—Å. –≥–ª–∞–≤: {novel.config.get('max_chapters')}")
            print(f"  –ó–∞–¥–µ—Ä–∂–∫–∞: {novel.config.get('request_delay')}")
            print(f"  –ú–æ–¥–µ–ª—å: {novel.config.get('translation_model')}")
            print(f"  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {novel.config.get('temperature')}")
        else:
            print("  ‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        # 6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        print("\nüí° 6. –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò")
        if ready_chapters:
            print("  ‚úÖ –ï—Å—Ç—å –≥–ª–∞–≤—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç—É—Ä—ã - –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å")
            print("  üîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:")
            print("    - –ó–∞–¥–∞—á–∞ –∑–∞–≤–∏—Å–ª–∞ –≤ —Å—Ç–∞—Ç—É—Å–µ 'pending'")
            print("    - –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ñ–æ–Ω–æ–≤—ã–º –ø–æ—Ç–æ–∫–æ–º")
            print("    - –û—à–∏–±–∫–∞ –≤ EditorService")
        else:
            print("  ‚ùå –ù–µ—Ç –≥–ª–∞–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç—É—Ä—ã")
            print("  üîß –†–µ—à–µ–Ω–∏—è:")
            print("    - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥ –¥–ª—è –≥–ª–∞–≤ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'parsed'")
            print("    - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å—ã –≥–ª–∞–≤")

if __name__ == "__main__":
    analyze_editing_problem() 