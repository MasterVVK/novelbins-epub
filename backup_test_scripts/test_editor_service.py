#!/usr/bin/env python3

import sys
import os
sys.path.append('/home/user/novelbins-epub/web_app')

from app import create_app, db
from app.models import Novel, Chapter, Translation, Task
from app.services.translator_service import TranslatorService
from app.services.editor_service import EditorService

app = create_app()

def test_editor_service():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ EditorService –Ω–∞–ø—Ä—è–º—É—é"""
    print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï EDITORSERVICE")
    print("=" * 50)
    
    with app.app_context():
        # –ü–æ–ª—É—á–∞–µ–º –≥–ª–∞–≤—É 3 (–≥–æ—Ç–æ–≤–∞ –∫ —Ä–µ–¥–∞–∫—Ç—É—Ä–µ)
        chapter = Chapter.query.filter_by(
            novel_id=2,
            chapter_number=3,
            is_active=True
        ).first()
        
        if not chapter:
            print("‚ùå –ì–ª–∞–≤–∞ 3 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        
        print(f"üìñ –ì–ª–∞–≤–∞: {chapter.original_title}")
        print(f"üìä –°—Ç–∞—Ç—É—Å: {chapter.status}")
        print(f"üìù –ü–µ—Ä–µ–≤–æ–¥–æ–≤: {len(chapter.translations)}")
        
        if not chapter.current_translation:
            print("‚ùå –ù–µ—Ç –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç—É—Ä—ã")
            return
        
        print(f"‚úÖ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞–π–¥–µ–Ω: {len(chapter.current_translation.translated_text)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
        print("\nüöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã...")
        try:
            translator_service = TranslatorService()
            editor_service = EditorService(translator_service)
            print("‚úÖ –°–µ—Ä–≤–∏—Å—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–æ–≤: {e}")
            return
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–¥–∞–∫—Ç—É—Ä—É
        print(f"\nüìù –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–¥–∞–∫—Ç—É—Ä—É –≥–ª–∞–≤—ã {chapter.chapter_number}...")
        try:
            success = editor_service.edit_chapter(chapter)
            if success:
                print("‚úÖ –†–µ–¥–∞–∫—Ç—É—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                if chapter.edited_translation:
                    print(f"üìÑ –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {len(chapter.edited_translation.translated_text)} —Å–∏–º–≤–æ–ª–æ–≤")
                    print(f"üîß –¢–∏–ø: {chapter.edited_translation.translation_type}")
                    print(f"ü§ñ API: {chapter.edited_translation.api_used}")
                else:
                    print("‚ùå –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            else:
                print("‚ùå –†–µ–¥–∞–∫—Ç—É—Ä–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç—É—Ä—ã: {e}")
            import traceback
            print(f"üìÑ Traceback: {traceback.format_exc()}")

if __name__ == "__main__":
    test_editor_service() 