#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ–º–ø—Ç–æ–≤ –≥–ª–∞–≤—ã 16
"""
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import create_app, db
from app.models import Chapter, PromptHistory

def debug_chapter_16():
    """–û—Ç–ª–∞–¥–∫–∞ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –≥–ª–∞–≤—ã 16"""
    app = create_app()
    
    with app.app_context():
        print("üîç –û—Ç–ª–∞–¥–∫–∞ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –≥–ª–∞–≤—ã 16...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤—É
        chapter = Chapter.query.get(16)
        if not chapter:
            print("‚ùå –ì–ª–∞–≤–∞ 16 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        
        print(f"üìñ –ì–ª–∞–≤–∞ {chapter.chapter_number} (ID: {chapter.id})")
        
        try:
            prompt_history = PromptHistory.query.filter_by(
                chapter_id=16
            ).order_by(PromptHistory.created_at.desc()).all()
            
            if not prompt_history:
                print("  ‚ÑπÔ∏è –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤ –ø—É—Å—Ç–∞")
                return
            
            print(f"  üìù –í—Å–µ–≥–æ –ø—Ä–æ–º–ø—Ç–æ–≤: {len(prompt_history)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Ç–∏–ø—ã –ø—Ä–æ–º–ø—Ç–æ–≤
            prompt_types = [p.prompt_type for p in prompt_history]
            print(f"  üè∑Ô∏è –¢–∏–ø—ã –ø—Ä–æ–º–ø—Ç–æ–≤: {prompt_types}")
            
            # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º (–∫–∞–∫ –≤ views.py)
            translation_prompts = []
            editing_prompts = []
            
            for prompt in prompt_history:
                print(f"    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–æ–º–ø—Ç —Ç–∏–ø–∞: '{prompt.prompt_type}'")
                
                if prompt.prompt_type in ['translation', 'summary', 'terms_extraction']:
                    translation_prompts.append(prompt)
                    print(f"      -> –î–æ–±–∞–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–≤–æ–¥")
                elif prompt.prompt_type.startswith('editing_'):
                    editing_prompts.append(prompt)
                    print(f"      -> –î–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–µ–¥–∞–∫—Ç—É—Ä—É")
                else:
                    translation_prompts.append(prompt)
                    print(f"      -> –î–æ–±–∞–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–≤–æ–¥ (–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø)")
            
            # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è —à–∞–±–ª–æ–Ω–∞
            prompt_groups = {
                'translation': translation_prompts,
                'editing': editing_prompts
            }
            
            print(f"\n  üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏:")
            print(f"    –ü–µ—Ä–µ–≤–æ–¥: {len(prompt_groups['translation'])} –ø—Ä–æ–º–ø—Ç–æ–≤")
            for p in prompt_groups['translation']:
                print(f"      - {p.prompt_type}")
            
            print(f"    –†–µ–¥–∞–∫—Ç—É—Ä–∞: {len(prompt_groups['editing'])} –ø—Ä–æ–º–ø—Ç–æ–≤")
            for p in prompt_groups['editing']:
                print(f"      - {p.prompt_type}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ —à–∞–±–ª–æ–Ω
            print(f"\n  üîß –î–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–±–ª–æ–Ω–∞:")
            print(f"    prompt_groups.keys(): {list(prompt_groups.keys())}")
            print(f"    prompt_groups['translation']: {len(prompt_groups['translation'])} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
            print(f"    prompt_groups['editing']: {len(prompt_groups['editing'])} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è –≤ —à–∞–±–ª–æ–Ω–µ
            print(f"\n  üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π —à–∞–±–ª–æ–Ω–∞:")
            print(f"    prompt_groups.translation: {bool(prompt_groups['translation'])}")
            print(f"    prompt_groups.editing: {bool(prompt_groups['editing'])}")
            
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–ª–∞–≤—ã: {e}")

if __name__ == "__main__":
    debug_chapter_16() 