#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ–º–ø—Ç–æ–≤
"""
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import create_app, db
from app.models import Chapter, PromptHistory

def test_prompt_history():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ–º–ø—Ç–æ–≤"""
    app = create_app()
    
    with app.app_context():
        print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ–º–ø—Ç–æ–≤...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        try:
            from sqlalchemy import inspect
            inspector = inspect(db.engine)
            tables = inspector.get_table_names()
            if 'prompt_history' in tables:
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ prompt_history —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            else:
                print("‚ùå –¢–∞–±–ª–∏—Ü–∞ prompt_history –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü: {e}")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≥–ª–∞–≤—ã –≤ –±–∞–∑–µ
        chapters = Chapter.query.limit(5).all()
        if not chapters:
            print("‚ö†Ô∏è –í –±–∞–∑–µ –Ω–µ—Ç –≥–ª–∞–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return True
        
        print(f"üìö –ù–∞–π–¥–µ–Ω–æ {len(chapters)} –≥–ª–∞–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π –≥–ª–∞–≤—ã
        for chapter in chapters:
            print(f"\nüìñ –ì–ª–∞–≤–∞ {chapter.chapter_number}:")
            
            try:
                prompt_history = PromptHistory.query.filter_by(
                    chapter_id=chapter.id
                ).order_by(PromptHistory.created_at.desc()).all()
                
                if prompt_history:
                    print(f"  ‚úÖ –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤: {len(prompt_history)} –∑–∞–ø–∏—Å–µ–π")
                    
                    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø–∞–º
                    types_count = {}
                    for prompt in prompt_history:
                        types_count[prompt.prompt_type] = types_count.get(prompt.prompt_type, 0) + 1
                    
                    for prompt_type, count in types_count.items():
                        print(f"    - {prompt_type}: {count}")
                else:
                    print(f"  ‚ÑπÔ∏è –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤ –ø—É—Å—Ç–∞")
                    
            except Exception as e:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏: {e}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
        print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏...")
        try:
            test_prompt = PromptHistory(
                chapter_id=chapters[0].id,
                prompt_type='test',
                system_prompt='–¢–µ—Å—Ç–æ–≤—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç',
                user_prompt='–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø—Ä–æ–º–ø—Ç',
                response='–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç',
                success=True,
                model_used='test-model',
                temperature=0.1,
                execution_time=1.5
            )
            
            db.session.add(test_prompt)
            db.session.commit()
            print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
            db.session.delete(test_prompt)
            db.session.commit()
            print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–ø–∏—Å–∏: {e}")
            return False
        
        print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        return True

if __name__ == "__main__":
    success = test_prompt_history()
    if success:
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!")
    else:
        print("\n‚ùå –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1) 