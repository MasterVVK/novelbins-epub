#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è is_active
"""
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import create_app, db
from app.models import Novel, Chapter
from app.services.parser_service import WebParserService

def test_parser_fix():
    """–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–∞"""
    app = create_app()
    
    with app.app_context():
        print("üîç –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è is_active...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥–µ–ª—å Chapter –Ω–µ –∏–º–µ–µ—Ç –ø–æ–ª–µ is_active
        chapter_columns = [column.name for column in Chapter.__table__.columns]
        print(f"üìã –ü–æ–ª—è –º–æ–¥–µ–ª–∏ Chapter: {chapter_columns}")
        
        if 'is_active' in chapter_columns:
            print("‚ùå –ü–æ–ª–µ is_active –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –º–æ–¥–µ–ª–∏ Chapter")
            return False
        else:
            print("‚úÖ –ü–æ–ª–µ is_active —É–¥–∞–ª–µ–Ω–æ –∏–∑ –º–æ–¥–µ–ª–∏ Chapter")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ ParserService –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è
        try:
            parser = WebParserService()
            print("‚úÖ WebParserService —Å–æ–∑–¥–∞–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ WebParserService: {e}")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –≥–ª–∞–≤—ã –±–µ–∑ is_active
        try:
            novels = Novel.query.filter_by(is_active=True).limit(1).all()
            if novels:
                novel = novels[0]
                chapters = Chapter.query.filter_by(novel_id=novel.id).all()
                print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ {len(chapters)} –≥–ª–∞–≤ –¥–ª—è –Ω–æ–≤–µ–ª–ª—ã '{novel.title}'")
            else:
                print("‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–≤–µ–ª–ª –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥–ª–∞–≤: {e}")
            return False
        
        print("\n‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: –ø–∞—Ä—Å–µ—Ä –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è is_active")
        return True

if __name__ == "__main__":
    test_parser_fix() 