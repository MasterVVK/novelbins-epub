#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ–º–ø—Ç–æ–≤ —Ä–µ–¥–∞–∫—Ç—É—Ä—ã
"""
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import create_app, db
from app.models import PromptHistory

def fix_editing_prompts():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –ø—Ä–æ–º–ø—Ç–æ–≤ —Ä–µ–¥–∞–∫—Ç—É—Ä—ã"""
    app = create_app()
    
    with app.app_context():
        print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –ø—Ä–æ–º–ø—Ç–æ–≤ —Ä–µ–¥–∞–∫—Ç—É—Ä—ã...")
        
        # –ò—â–µ–º –ø—Ä–æ–º–ø—Ç—ã —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ –ø—Ä–æ–º–ø—Ç–∞–º–∏ —Ä–µ–¥–∞–∫—Ç—É—Ä—ã, –Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏
        editing_keywords = [
            '–û—Ç–ø–æ–ª–∏—Ä—É–π –¥–∏–∞–ª–æ–≥–∏',
            '–£–ª—É—á—à–∏ —Å—Ç–∏–ª—å',
            '–°–¥–µ–ª–∞–π —Ñ–∏–Ω–∞–ª—å–Ω—É—é –ø–æ–ª–∏—Ä–æ–≤–∫—É',
            '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–∞—á–µ—Å—Ç–≤–æ'
        ]
        
        fixed_count = 0
        
        for keyword in editing_keywords:
            # –ò—â–µ–º –ø—Ä–æ–º–ø—Ç—ã —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ —Ä–µ–¥–∞–∫—Ç—É—Ä—ã
            prompts = PromptHistory.query.filter(
                PromptHistory.system_prompt.contains(keyword),
                PromptHistory.prompt_type == 'translation'
            ).all()
            
            for prompt in prompts:
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
                if '–û—Ç–ø–æ–ª–∏—Ä—É–π –¥–∏–∞–ª–æ–≥–∏' in prompt.system_prompt:
                    new_type = 'editing_dialogue'
                elif '–£–ª—É—á—à–∏ —Å—Ç–∏–ª—å' in prompt.system_prompt:
                    new_type = 'editing_style'
                elif '–°–¥–µ–ª–∞–π —Ñ–∏–Ω–∞–ª—å–Ω—É—é –ø–æ–ª–∏—Ä–æ–≤–∫—É' in prompt.system_prompt:
                    new_type = 'editing_final'
                elif '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–∞—á–µ—Å—Ç–≤–æ' in prompt.system_prompt:
                    new_type = 'editing_analysis'
                else:
                    continue
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∏–ø –ø—Ä–æ–º–ø—Ç–∞
                old_type = prompt.prompt_type
                prompt.prompt_type = new_type
                fixed_count += 1
                
                print(f"  ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –ø—Ä–æ–º–ø—Ç ID {prompt.id}: {old_type} ‚Üí {new_type}")
                print(f"     –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç: {prompt.system_prompt[:100]}...")
        
        if fixed_count > 0:
            db.session.commit()
            print(f"\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {fixed_count} –ø—Ä–æ–º–ø—Ç–æ–≤ —Ä–µ–¥–∞–∫—Ç—É—Ä—ã")
        else:
            print(f"\n‚ÑπÔ∏è –ü—Ä–æ–º–ø—Ç—ã —Ä–µ–¥–∞–∫—Ç—É—Ä—ã —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        from sqlalchemy import func
        type_stats = db.session.query(
            PromptHistory.prompt_type,
            func.count(PromptHistory.id).label('count')
        ).group_by(PromptHistory.prompt_type).all()
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
        for prompt_type, count in type_stats:
            print(f"  {prompt_type}: {count}")

if __name__ == "__main__":
    fix_editing_prompts() 