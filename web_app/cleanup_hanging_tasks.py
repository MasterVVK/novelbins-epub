#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∑–∞–≤–∏—Å—à–∏—Ö –∑–∞–¥–∞—á
"""
import sys
import os
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import create_app, db
from app.models import Task

def cleanup_hanging_tasks():
    """–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–∏—Å—à–∏—Ö –∑–∞–¥–∞—á"""
    app = create_app()
    with app.app_context():
        print("üßπ –û–ß–ò–°–¢–ö–ê –ó–ê–í–ò–°–®–ò–• –ó–ê–î–ê–ß")
        print("=" * 40)
        
        # –ù–∞—Ö–æ–¥–∏–º –∑–∞–≤–∏—Å—à–∏–µ –∑–∞–¥–∞—á–∏ (running –±–æ–ª–µ–µ 1 —á–∞—Å–∞)
        cutoff_time = datetime.utcnow() - timedelta(hours=1)
        
        hanging_tasks = Task.query.filter(
            Task.status == 'running',
            Task.created_at < cutoff_time
        ).all()
        
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ –∑–∞–≤–∏—Å—à–∏—Ö –∑–∞–¥–∞—á: {len(hanging_tasks)}")
        
        if not hanging_tasks:
            print("‚úÖ –ù–µ—Ç –∑–∞–≤–∏—Å—à–∏—Ö –∑–∞–¥–∞—á –¥–ª—è –æ—á–∏—Å—Ç–∫–∏")
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≤–∏—Å—à–∏–µ –∑–∞–¥–∞—á–∏
        print("\nüìä –ó–ê–í–ò–°–®–ò–ï –ó–ê–î–ê–ß–ò:")
        for task in hanging_tasks:
            print(f"   ID: {task.id}, —Ç–∏–ø: {task.task_type}, –Ω–æ–≤–µ–ª–ª–∞: {task.novel_id}")
            print(f"      –°–æ–∑–¥–∞–Ω–∞: {task.created_at}")
            print(f"      –ü—Ä–æ–≥—Ä–µ—Å—Å: {task.progress}%")
        
        # –û—á–∏—â–∞–µ–º –∑–∞–≤–∏—Å—à–∏–µ –∑–∞–¥–∞—á–∏
        cleaned_count = 0
        for task in hanging_tasks:
            try:
                task.status = 'failed'
                task.error_message = '–ó–∞–¥–∞—á–∞ –∑–∞–≤–∏—Å–ª–∞ –∏ –±—ã–ª–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞'
                print(f"‚úÖ –ó–∞–¥–∞—á–∞ {task.id} –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ failed")
                cleaned_count += 1
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∑–∞–¥–∞—á–∏ {task.id}: {e}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        try:
            db.session.commit()
            print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
            print(f"   –û—á–∏—â–µ–Ω–æ –∑–∞–¥–∞—á: {cleaned_count}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {e}")
            db.session.rollback()

def check_task_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á"""
    app = create_app()
    with app.app_context():
        print("\nüîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ó–ê–î–ê–ß")
        print("=" * 30)
        
        # –í—Å–µ –∑–∞–¥–∞—á–∏
        all_tasks = Task.query.order_by(Task.created_at.desc()).limit(10).all()
        print(f"üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–¥–∞—á:")
        
        for task in all_tasks:
            print(f"   ID: {task.id}, —Ç–∏–ø: {task.task_type}, —Å—Ç–∞—Ç—É—Å: {task.status}")
            print(f"      –ù–æ–≤–µ–ª–ª–∞: {task.novel_id}, –ø—Ä–æ–≥—Ä–µ—Å—Å: {task.progress}%")
            print(f"      –°–æ–∑–¥–∞–Ω–∞: {task.created_at}")
            if task.status == 'running':
                age = datetime.utcnow() - task.created_at
                print(f"      –í–æ–∑—Ä–∞—Å—Ç: {age}")
            print()

def fix_specific_task(task_id):
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–¥–∞—á–∏"""
    app = create_app()
    with app.app_context():
        print(f"\nüîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–î–ê–ß–ò {task_id}")
        print("=" * 30)
        
        task = Task.query.get(task_id)
        if not task:
            print(f"‚ùå –ó–∞–¥–∞—á–∞ {task_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        
        print(f"üìã –ó–∞–¥–∞—á–∞: {task.task_type} –¥–ª—è –Ω–æ–≤–µ–ª–ª—ã {task.novel_id}")
        print(f"   –°—Ç–∞—Ç—É—Å: {task.status}")
        print(f"   –ü—Ä–æ–≥—Ä–µ—Å—Å: {task.progress}%")
        print(f"   –°–æ–∑–¥–∞–Ω–∞: {task.created_at}")
        
        if task.status == 'running':
            task.status = 'failed'
            task.error_message = '–ó–∞–¥–∞—á–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤—Ä—É—á–Ω—É—é'
            db.session.commit()
            print(f"‚úÖ –ó–∞–¥–∞—á–∞ {task_id} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")
        else:
            print(f"‚ÑπÔ∏è –ó–∞–¥–∞—á–∞ {task_id} –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")

if __name__ == '__main__':
    print("üöÄ –ó–ê–ü–£–°–ö –û–ß–ò–°–¢–ö–ò –ó–ê–í–ò–°–®–ò–• –ó–ê–î–ê–ß")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    check_task_status()
    
    # –û—á–∏—â–∞–µ–º –∑–∞–≤–∏—Å—à–∏–µ –∑–∞–¥–∞—á–∏
    cleanup_hanging_tasks()
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∑–∞–¥–∞—á—É (ID=2)
    fix_specific_task(2)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    check_task_status()
    
    print("\n‚úÖ –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê") 