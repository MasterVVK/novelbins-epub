#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤ —Ä–µ–¥–∞–∫—Ç—É—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏
"""
import os
import sys
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import create_app, db
from app.models import Chapter, PromptHistory

def create_demo_editing_prompts():
    """–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤ —Ä–µ–¥–∞–∫—Ç—É—Ä—ã"""
    app = create_app()
    
    with app.app_context():
        print("üé≠ –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤ —Ä–µ–¥–∞–∫—Ç—É—Ä—ã...")
        
        # –ù–∞—Ö–æ–¥–∏–º –≥–ª–∞–≤—É —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏ –ø–µ—Ä–µ–≤–æ–¥–∞
        chapters_with_prompts = db.session.query(PromptHistory.chapter_id).distinct().all()
        if not chapters_with_prompts:
            print("‚ùå –ù–µ—Ç –≥–ª–∞–≤ —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return
        
        chapter_id = chapters_with_prompts[0][0]
        chapter = Chapter.query.get(chapter_id)
        
        if not chapter:
            print(f"‚ùå –ì–ª–∞–≤–∞ {chapter_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        
        print(f"üìñ –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç—ã —Ä–µ–¥–∞–∫—Ç—É—Ä—ã –¥–ª—è –≥–ª–∞–≤—ã {chapter.chapter_number} (ID: {chapter_id})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–æ–º–ø—Ç—ã —Ä–µ–¥–∞–∫—Ç—É—Ä—ã
        existing_editing = PromptHistory.query.filter_by(
            chapter_id=chapter_id,
            prompt_type='editing_analysis'
        ).first()
        
        if existing_editing:
            print("‚ÑπÔ∏è –ü—Ä–æ–º–ø—Ç—ã —Ä–µ–¥–∞–∫—Ç—É—Ä—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
            return
        
        # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã —Ä–µ–¥–∞–∫—Ç—É—Ä—ã
        editing_prompts = [
            {
                'type': 'editing_analysis',
                'system': '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–∞—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞',
                'user': '–¢–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–∞—á–µ—Å—Ç–≤–∞...',
                'response': '–ö–ê–ß–ï–°–¢–í–û: 7\n–°–¢–†–ê–¢–ï–ì–ò–Ø: style'
            },
            {
                'type': 'editing_style',
                'system': '–£–ª—É—á—à–∏ —Å—Ç–∏–ª—å –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞',
                'user': '–¢–µ–∫—Å—Ç –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Å—Ç–∏–ª—è...',
                'response': '–£–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –±–æ–ª–µ–µ –ø–ª–∞–≤–Ω—ã–º–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏...'
            },
            {
                'type': 'editing_dialogue',
                'system': '–û—Ç–ø–æ–ª–∏—Ä—É–π –¥–∏–∞–ª–æ–≥–∏ –≤ —Ç–µ–∫—Å—Ç–µ',
                'user': '–¢–µ–∫—Å—Ç —Å –¥–∏–∞–ª–æ–≥–∞–º–∏...',
                'response': '–¢–µ–∫—Å—Ç —Å –æ—Ç–ø–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∏–∞–ª–æ–≥–∞–º–∏...'
            },
            {
                'type': 'editing_final',
                'system': '–°–¥–µ–ª–∞–π —Ñ–∏–Ω–∞–ª—å–Ω—É—é –ø–æ–ª–∏—Ä–æ–≤–∫—É —Ç–µ–∫—Å—Ç–∞',
                'user': '–¢–µ–∫—Å—Ç –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø–æ–ª–∏—Ä–æ–≤–∫–∏...',
                'response': '–§–∏–Ω–∞–ª—å–Ω–æ –æ—Ç–ø–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç...'
            }
        ]
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç—ã —Å —Ä–∞–∑–Ω—ã–º–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–∫–∞–º–∏
        for i, prompt_data in enumerate(editing_prompts):
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
            timestamp = datetime.utcnow()
            
            prompt = PromptHistory(
                chapter_id=chapter_id,
                prompt_type=prompt_data['type'],
                system_prompt=prompt_data['system'],
                user_prompt=prompt_data['user'],
                response=prompt_data['response'],
                api_key_index=0,
                model_used='gemini-pro',
                temperature=0.2,
                tokens_used=1000 + i * 100,
                finish_reason='STOP',
                success=True,
                error_message=None,
                execution_time=5.0 + i,
                created_at=timestamp
            )
            
            db.session.add(prompt)
            print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ–º–ø—Ç: {prompt_data['type']}")
        
        db.session.commit()
        print(f"\n‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(editing_prompts)} –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤ —Ä–µ–¥–∞–∫—Ç—É—Ä—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        total_prompts = PromptHistory.query.filter_by(chapter_id=chapter_id).count()
        editing_prompts_count = PromptHistory.query.filter_by(
            chapter_id=chapter_id,
            prompt_type='editing_analysis'
        ).count()
        
        print(f"üìä –í—Å–µ–≥–æ –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –≥–ª–∞–≤—ã: {total_prompts}")
        print(f"üìä –ü—Ä–æ–º–ø—Ç–æ–≤ —Ä–µ–¥–∞–∫—Ç—É—Ä—ã: {editing_prompts_count}")
        
        print(f"\nüéâ –¢–µ–ø–µ—Ä—å –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≥–ª–∞–≤—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ!")
        print(f"   –î–æ–ª–∂–Ω—ã –ø–æ—è–≤–∏—Ç—å—Å—è —Å–µ–∫—Ü–∏–∏ '–ü–µ—Ä–µ–≤–æ–¥' –∏ '–†–µ–¥–∞–∫—Ç—É—Ä–∞'")

if __name__ == "__main__":
    create_demo_editing_prompts() 