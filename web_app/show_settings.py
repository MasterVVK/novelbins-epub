#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∏—Å—Ç–µ–º—ã
"""
from app import create_app, db
from app.models import SystemSettings
from app.services.settings_service import SettingsService

def main():
    app = create_app()
    with app.app_context():
        print("üîß –ù–ê–°–¢–†–û–ô–ö–ò –°–ò–°–¢–ï–ú–´")
        print("=" * 50)
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        all_settings = SystemSettings.query.all()
        
        if not all_settings:
            print("‚ùå –ù–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return
        
        for setting in all_settings:
            print(f"üìù {setting.key}:")
            print(f"   –ó–Ω–∞—á–µ–Ω–∏–µ: {setting.value}")
            print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {setting.description}")
            print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ: {setting.updated_at}")
            print()
        
        print("üîë API –ö–õ–Æ–ß–ò")
        print("=" * 30)
        
        gemini_keys = SettingsService.get_gemini_api_keys()
        openai_key = SettingsService.get_openai_api_key()
        
        print(f"Gemini –∫–ª—é—á–µ–π: {len(gemini_keys)}")
        if gemini_keys:
            for i, key in enumerate(gemini_keys, 1):
                print(f"  {i}. {key[:10]}...{key[-4:]}")
        
        print(f"OpenAI –∫–ª—é—á: {'‚úÖ' if openai_key else '‚ùå'}")
        if openai_key:
            print(f"  {openai_key[:10]}...{openai_key[-4:]}")
        
        print()
        print("‚öôÔ∏è –ü–ê–†–ê–ú–ï–¢–†–´")
        print("=" * 20)
        print(f"–ú–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {SettingsService.get_default_model()}")
        print(f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {SettingsService.get_default_temperature()}")
        print(f"–ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤: {SettingsService.get_max_tokens()}")
        print(f"–ó–∞–¥–µ—Ä–∂–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤: {SettingsService.get_request_delay()} —Å–µ–∫")
        print(f"–ú–∞–∫—Å–∏–º—É–º –≥–ª–∞–≤: {SettingsService.get_max_chapters()}")
        print(f"–ü–æ—Ä–æ–≥ –∫–∞—á–µ—Å—Ç–≤–∞: {SettingsService.get_quality_threshold()}")

if __name__ == "__main__":
    main() 