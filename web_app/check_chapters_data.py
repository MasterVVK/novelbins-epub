#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≥–ª–∞–≤ –∏ –∏—Ö –Ω–æ–º–µ—Ä–æ–≤
"""
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import create_app, db
from app.models import Chapter, PromptHistory

def check_chapters_data():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≥–ª–∞–≤ –∏ –∏—Ö –Ω–æ–º–µ—Ä–æ–≤"""
    app = create_app()
    
    with app.app_context():
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≥–ª–∞–≤ –∏ –∏—Ö –Ω–æ–º–µ—Ä–æ–≤...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≥–ª–∞–≤—ã
        chapters = Chapter.query.order_by(Chapter.chapter_number).all()
        print(f"üìö –í—Å–µ–≥–æ –≥–ª–∞–≤: {len(chapters)}")
        
        print(f"\nüìñ –ì–ª–∞–≤—ã:")
        for chapter in chapters:
            print(f"  ID: {chapter.id}, –ù–æ–º–µ—Ä: {chapter.chapter_number}, –ù–∞–∑–≤–∞–Ω–∏–µ: {chapter.original_title or '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–º–ø—Ç—ã –ø–æ –≥–ª–∞–≤–∞–º
        print(f"\nüìù –ü—Ä–æ–º–ø—Ç—ã –ø–æ –≥–ª–∞–≤–∞–º:")
        chapters_with_prompts = db.session.query(PromptHistory.chapter_id).distinct().all()
        
        for (chapter_id,) in chapters_with_prompts:
            chapter = Chapter.query.get(chapter_id)
            if chapter:
                prompt_count = PromptHistory.query.filter_by(chapter_id=chapter_id).count()
                print(f"  –ì–ª–∞–≤–∞ {chapter.chapter_number} (ID: {chapter_id}): {prompt_count} –ø—Ä–æ–º–ø—Ç–æ–≤")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø—ã –ø—Ä–æ–º–ø—Ç–æ–≤
                prompt_types = db.session.query(PromptHistory.prompt_type).filter_by(chapter_id=chapter_id).distinct().all()
                types_list = [pt[0] for pt in prompt_types]
                print(f"    –¢–∏–ø—ã: {types_list}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –Ω–æ–º–µ—Ä–∞ –≥–ª–∞–≤
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –Ω–æ–º–µ—Ä–æ–≤ –≥–ª–∞–≤:")
        chapter_numbers = [c.chapter_number for c in chapters]
        duplicates = [x for x in set(chapter_numbers) if chapter_numbers.count(x) > 1]
        
        if duplicates:
            print(f"  ‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –Ω–æ–º–µ—Ä–∞: {duplicates}")
            for num in duplicates:
                dup_chapters = [c for c in chapters if c.chapter_number == num]
                print(f"    –ù–æ–º–µ—Ä {num}: {len(dup_chapters)} –≥–ª–∞–≤")
                for c in dup_chapters:
                    print(f"      - ID: {c.id}, –ù–∞–∑–≤–∞–Ω–∏–µ: {c.original_title or '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}")
        else:
            print(f"  ‚úÖ –î—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –Ω–æ–º–µ—Ä–æ–≤ –≥–ª–∞–≤ –Ω–µ—Ç")

if __name__ == "__main__":
    check_chapters_data() 