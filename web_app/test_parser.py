#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞
"""
from app import create_app, db
from app.models import Novel, Chapter
from app.services.parser_service import WebParserService

def test_parser():
    app = create_app()
    with app.app_context():
        print("üß™ –¢–ï–°–¢ –ü–ê–†–°–ï–†–ê")
        print("=" * 40)
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é –Ω–æ–≤–µ–ª–ª—É
        novel = Novel.query.first()
        if not novel:
            print("‚ùå –ù–æ–≤–µ–ª–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        print(f"üìñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤–µ–ª–ª—É: {novel.title}")
        print(f"üîó URL: {novel.source_url}")
        print(f"üìä –ì–ª–∞–≤ –≤ –ë–î: {Chapter.query.filter_by(novel_id=novel.id).count()}")
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä
        parser = WebParserService()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –≥–ª–∞–≤
        print("\nüîç –ü–∞—Ä—Å–∏–Ω–≥ —Å–ø–∏—Å–∫–∞ –≥–ª–∞–≤...")
        chapters_data = parser.parse_novel_chapters(novel)
        
        if not chapters_data:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≥–ª–∞–≤")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –≥–ª–∞–≤: {len(chapters_data)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –≥–ª–∞–≤—ã
        for i, chapter in enumerate(chapters_data[:3]):
            print(f"  {i+1}. –ì–ª–∞–≤–∞ {chapter['number']}: {chapter['title']}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–µ—Ä–≤–æ–π –≥–ª–∞–≤—ã
        if chapters_data:
            first_chapter = chapters_data[0]
            print(f"\nüìñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –≥–ª–∞–≤—ã {first_chapter['number']}...")
            
            content = parser.parse_chapter_content(first_chapter['url'], first_chapter['number'])
            if content:
                print(f"‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω: {len(content)} —Å–∏–º–≤–æ–ª–æ–≤")
                print(f"üìù –ù–∞—á–∞–ª–æ: {content[:100]}...")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç")

if __name__ == "__main__":
    test_parser() 