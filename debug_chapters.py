#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –≥–ª–∞–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import sys
sys.path.insert(0, 'web_app')

from web_app.app import create_app
from web_app.app.models import Novel, Chapter


def debug_chapters(novel_id=None):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–ª–∞–≤–∞—Ö"""

    app = create_app()
    with app.app_context():

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–æ–≤–µ–ª–ª—ã –∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é
        if novel_id:
            novels = [Novel.query.get(novel_id)]
            if not novels[0]:
                print(f"‚ùå –ù–æ–≤–µ–ª–ª–∞ —Å ID {novel_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
                return
        else:
            novels = Novel.query.filter_by(is_active=True).all()

        for novel in novels:
            if not novel:
                continue

            print("\n" + "=" * 70)
            print(f"üìö –ù–æ–≤–µ–ª–ª–∞: {novel.title} (ID: {novel.id})")
            print("=" * 70)

            # –ü–æ–ª—É—á–∞–µ–º –≥–ª–∞–≤—ã
            chapters = Chapter.query.filter_by(novel_id=novel.id).order_by(Chapter.chapter_number).all()

            print(f"\nüìä –í—Å–µ–≥–æ –≥–ª–∞–≤: {len(chapters)}")

            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            with_original = sum(1 for ch in chapters if ch.original_text)
            with_translation = sum(1 for ch in chapters if ch.current_translation)
            with_edited = sum(1 for ch in chapters if ch.edited_translation)

            print(f"   –° –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º: {with_original}")
            print(f"   –° –ø–µ—Ä–µ–≤–æ–¥–æ–º: {with_translation}")
            print(f"   –° —Ä–µ–¥–∞–∫—Ç—É—Ä–æ–π: {with_edited}")

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –≥–ª–∞–≤
            print("\nüìñ –ü–µ—Ä–≤—ã–µ 5 –≥–ª–∞–≤:")
            for ch in chapters[:5]:
                print(f"\n   –ì–ª–∞–≤–∞ {ch.chapter_number}:")
                print(f"      –ó–∞–≥–æ–ª–æ–≤–æ–∫: {ch.original_title}")
                print(f"      –°—Ç–∞—Ç—É—Å: {ch.status}")
                print(f"      –û—Ä–∏–≥–∏–Ω–∞–ª: {'‚úÖ –ï—Å—Ç—å' if ch.original_text else '‚ùå –ù–µ—Ç'} ({len(ch.original_text or '') if ch.original_text else 0} —Å–∏–º–≤–æ–ª–æ–≤)")
                print(f"      –ü–µ—Ä–µ–≤–æ–¥: {'‚úÖ –ï—Å—Ç—å' if ch.current_translation else '‚ùå –ù–µ—Ç'}")
                print(f"      –†–µ–¥–∞–∫—Ç—É—Ä–∞: {'‚úÖ –ï—Å—Ç—å' if ch.edited_translation else '‚ùå –ù–µ—Ç'}")

                if ch.original_text:
                    print(f"      –ü—Ä–µ–≤—å—é –æ—Ä–∏–≥–∏–Ω–∞–ª–∞: {ch.original_text[:100]}...")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""

    print("\nüîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ì–õ–ê–í –í –ë–ê–ó–ï –î–ê–ù–ù–´–•")

    # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –∞—Ä–≥—É–º–µ–Ω—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –Ω–æ–≤–µ–ª–ª—É
    if len(sys.argv) > 1:
        try:
            novel_id = int(sys.argv[1])
            debug_chapters(novel_id)
        except ValueError:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID –Ω–æ–≤–µ–ª–ª—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python debug_chapters.py <novel_id>")
    else:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –Ω–æ–≤–µ–ª–ª—ã
        debug_chapters()

    print("\n")


if __name__ == '__main__':
    main()
