#!/usr/bin/env python3

import sys
import os
sys.path.append('/home/user/novelbins-epub/web_app')

from app import create_app, db
from app.models import Novel, Chapter, Translation

app = create_app()

with app.app_context():
    print("üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤—ã 3...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≥–ª–∞–≤—É 3
    chapter = Chapter.query.filter_by(
        novel_id=2,
        chapter_number=3,
        is_active=True
    ).first()
    
    if not chapter:
        print("‚ùå –ì–ª–∞–≤–∞ 3 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        exit(1)
    
    print(f"üìñ –ì–ª–∞–≤–∞: {chapter.original_title}")
    print(f"üìä –°—Ç–∞—Ç—É—Å: {chapter.status}")
    print(f"üìù –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç: {'–ï—Å—Ç—å' if chapter.original_text else '–ù–µ—Ç'}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã
    print(f"\nüìã –í—Å–µ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–æ–≤: {len(chapter.translations)}")
    for i, trans in enumerate(chapter.translations):
        print(f"  –ü–µ—Ä–µ–≤–æ–¥ {i+1}: {trans.translation_type} ({trans.api_used})")
        print(f"    –î–ª–∏–Ω–∞: {len(trans.translated_text)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"    –°–æ–∑–¥–∞–Ω: {trans.created_at}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤–æ–π—Å—Ç–≤–∞
    print(f"\nüîç –°–≤–æ–π—Å—Ç–≤–∞ –≥–ª–∞–≤—ã:")
    print(f"  current_translation: {'–ï—Å—Ç—å' if chapter.current_translation else '–ù–µ—Ç'}")
    print(f"  edited_translation: {'–ï—Å—Ç—å' if chapter.edited_translation else '–ù–µ—Ç'}")
    print(f"  is_translated: {chapter.is_translated}")
    print(f"  is_edited: {chapter.is_edited}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≥–æ—Ç–æ–≤–∞ –ª–∏ –≥–ª–∞–≤–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç—É—Ä—ã
    if chapter.status == 'translated' and chapter.current_translation:
        print(f"\n‚úÖ –ì–ª–∞–≤–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç—É—Ä—ã!")
        print(f"  –°—Ç–∞—Ç—É—Å: {chapter.status}")
        print(f"  –ï—Å—Ç—å –ø–µ—Ä–µ–≤–æ–¥: {len(chapter.current_translation.translated_text)} —Å–∏–º–≤–æ–ª–æ–≤")
    else:
        print(f"\n‚ùå –ì–ª–∞–≤–∞ –ù–ï –≥–æ—Ç–æ–≤–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç—É—Ä—ã")
        print(f"  –°—Ç–∞—Ç—É—Å: {chapter.status}")
        print(f"  –ü–µ—Ä–µ–≤–æ–¥: {'–ï—Å—Ç—å' if chapter.current_translation else '–ù–µ—Ç'}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–∞—á–∏ —Ä–µ–¥–∞–∫—Ç—É—Ä—ã
    from app.models import Task
    editing_tasks = Task.query.filter_by(
        novel_id=2,
        task_type='editing'
    ).order_by(Task.created_at.desc()).all()
    
    print(f"\nüìã –ó–∞–¥–∞—á–∏ —Ä–µ–¥–∞–∫—Ç—É—Ä—ã: {len(editing_tasks)}")
    for task in editing_tasks:
        print(f"  –ó–∞–¥–∞—á–∞ {task.id}: {task.status} (—Å–æ–∑–¥–∞–Ω–∞: {task.created_at})")
        if hasattr(task, 'error_message') and task.error_message:
            print(f"    –û—à–∏–±–∫–∞: {task.error_message}")
        if hasattr(task, 'result') and task.result:
            print(f"    –†–µ–∑—É–ª—å—Ç–∞—Ç: {task.result}") 