#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–∞—Ä—Å–µ—Ä–∞ czbooks.net
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–∞—Ä—Å–µ—Ä–∞
"""
import sys
from parsers import create_parser, create_parser_from_url, detect_source


def test_parser_factory():
    """–¢–µ—Å—Ç —Ñ–∞–±—Ä–∏–∫–∏ –ø–∞—Ä—Å–µ—Ä–æ–≤"""
    print("\n" + "=" * 60)
    print("1Ô∏è‚É£  –¢–ï–°–¢ –§–ê–ë–†–ò–ö–ò –ü–ê–†–°–ï–†–û–í")
    print("=" * 60)

    # –¢–µ—Å—Ç 1: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø–æ URL
    test_url = "https://czbooks.net/n/ul6pe"
    print(f"\nüìã –¢–µ—Å—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞:")
    print(f"   URL: {test_url}")

    source = detect_source(test_url)
    print(f"   ‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫: {source}")

    assert source == 'czbooks', f"–û–∂–∏–¥–∞–ª—Å—è 'czbooks', –ø–æ–ª—É—á–µ–Ω '{source}'"

    # –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ –ø–æ –∏–º–µ–Ω–∏
    print(f"\nüìã –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–∞ –ø–æ –∏–º–µ–Ω–∏:")
    parser = create_parser('czbooks')
    print(f"   ‚úÖ –ü–∞—Ä—Å–µ—Ä —Å–æ–∑–¥–∞–Ω: {parser.source_name}")
    parser.close()

    # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ –∏–∑ URL
    print(f"\nüìã –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–∞ –∏–∑ URL:")
    parser = create_parser_from_url(test_url)
    print(f"   ‚úÖ –ü–∞—Ä—Å–µ—Ä —Å–æ–∑–¥–∞–Ω –∏–∑ URL: {parser.source_name}")
    parser.close()

    print(f"\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã —Ñ–∞–±—Ä–∏–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!\n")


def test_czbooks_parser_basic():
    """–ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞ czbooks"""
    print("\n" + "=" * 60)
    print("2Ô∏è‚É£  –ë–ê–ó–û–í–´–ô –¢–ï–°–¢ CZBOOKS PARSER")
    print("=" * 60)

    test_url = "https://czbooks.net/n/ul6pe"

    # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä
    print(f"\nüìö –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ –¥–ª—è czbooks.net...")
    parser = create_parser('czbooks')

    try:
        # –¢–µ—Å—Ç 1: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–Ω–∏–≥–µ
        print(f"\nüìñ –¢–µ—Å—Ç 1: get_book_info()")
        print(f"   URL: {test_url}")

        book_info = parser.get_book_info(test_url)

        print(f"\n   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(f"      –ù–∞–∑–≤–∞–Ω–∏–µ: {book_info['title']}")
        print(f"      –ê–≤—Ç–æ—Ä: {book_info['author']}")
        print(f"      ID –∫–Ω–∏–≥–∏: {book_info['book_id']}")
        print(f"      –ñ–∞–Ω—Ä: {book_info['genre']}")
        print(f"      –°—Ç–∞—Ç—É—Å: {book_info['status']}")

        if book_info['description']:
            print(f"      –û–ø–∏—Å–∞–Ω–∏–µ: {book_info['description'][:100]}...")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—É—á–µ–Ω—ã –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        assert book_info['title'] != "Unknown Title", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏"
        assert book_info['book_id'] != 'unknown', "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID –∫–Ω–∏–≥–∏"

        print(f"   ‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–Ω–∏–≥–µ –ø–æ–ª—É—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")

        # –¢–µ—Å—Ç 2: –°–ø–∏—Å–æ–∫ –≥–ª–∞–≤
        print(f"\nüìö –¢–µ—Å—Ç 2: get_chapter_list()")

        chapters = parser.get_chapter_list(test_url)

        print(f"\n   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(f"      –ù–∞–π–¥–µ–Ω–æ –≥–ª–∞–≤: {len(chapters)}")

        if chapters:
            print(f"\n   –ü–µ—Ä–≤—ã–µ 5 –≥–ª–∞–≤:")
            for ch in chapters[:5]:
                print(f"      {ch['number']}. {ch['title'][:60]}")
                print(f"         URL: {ch['url']}")
                print(f"         ID: {ch['chapter_id']}")

            assert len(chapters) > 0, "–°–ø–∏—Å–æ–∫ –≥–ª–∞–≤ –ø—É—Å—Ç"
            print(f"   ‚úÖ –°–ø–∏—Å–æ–∫ –≥–ª–∞–≤ –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")

            # –¢–µ—Å—Ç 3: –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≥–ª–∞–≤—ã
            print(f"\nüìÑ –¢–µ—Å—Ç 3: get_chapter_content()")
            print(f"   –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–≤–æ–π –≥–ª–∞–≤—ã...")

            first_chapter = chapters[0]
            content_data = parser.get_chapter_content(first_chapter['url'])

            print(f"\n   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
            print(f"      –ó–∞–≥–æ–ª–æ–≤–æ–∫: {content_data['title']}")
            print(f"      –†–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {content_data['word_count']} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"      ID –≥–ª–∞–≤—ã: {content_data['chapter_id']}")
            print(f"      –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞: {content_data['is_locked']}")

            print(f"\n   –ü—Ä–µ–≤—å—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–ø–µ—Ä–≤—ã–µ 300 —Å–∏–º–≤–æ–ª–æ–≤):")
            print(f"   {'-' * 60}")
            print(f"   {content_data['content'][:300]}...")
            print(f"   {'-' * 60}")

            assert content_data['content'] != "Content not found", "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ"
            assert len(content_data['content']) > 100, "–ö–æ–Ω—Ç–µ–Ω—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π"

            print(f"   ‚úÖ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≥–ª–∞–≤—ã –ø–æ–ª—É—á–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")

        else:
            print(f"   ‚ö†Ô∏è –ì–ª–∞–≤—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ —Å Cloudflare)")

        print(f"\n‚úÖ –ë–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!\n")

    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
        return False

    finally:
        parser.close()

    return True


def test_czbooks_with_proxy():
    """–¢–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞ —Å SOCKS –ø—Ä–æ–∫—Å–∏ (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)"""
    print("\n" + "=" * 60)
    print("3Ô∏è‚É£  –¢–ï–°–¢ –° SOCKS –ü–†–û–ö–°–ò (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")
    print("=" * 60)

    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ–∫—Å–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    socks_proxy = None  # –ù–∞–ø—Ä–∏–º–µ—Ä: "127.0.0.1:1080"

    if not socks_proxy:
        print("   ‚ö†Ô∏è SOCKS –ø—Ä–æ–∫—Å–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç")
        print("   üí° –ß—Ç–æ–±—ã –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å –ø—Ä–æ–∫—Å–∏, —É–∫–∞–∂–∏—Ç–µ socks_proxy –≤ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏")
        return True

    test_url = "https://czbooks.net/n/ul6pe"

    print(f"\nüìö –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ —Å –ø—Ä–æ–∫—Å–∏: {socks_proxy}")
    parser = create_parser('czbooks', socks_proxy=socks_proxy)

    try:
        print(f"\nüìñ –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–Ω–∏–≥–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏...")
        book_info = parser.get_book_info(test_url)

        print(f"   ‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ: {book_info['title']}")
        print(f"   ‚úÖ –ü—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")

    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–∫—Å–∏: {e}")
        return False

    finally:
        parser.close()

    return True


def test_czbooks_with_auth():
    """–¢–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞ —Å cookies –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã)"""
    print("\n" + "=" * 60)
    print("4Ô∏è‚É£  –¢–ï–°–¢ –° –ê–í–¢–û–†–ò–ó–ê–¶–ò–ï–ô (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")
    print("=" * 60)

    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å cookies –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    auth_cookies = None  # –ù–∞–ø—Ä–∏–º–µ—Ä: "session=abc123; user_id=456"

    if not auth_cookies:
        print("   ‚ö†Ô∏è Cookies –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç")
        print("   üí° –ß—Ç–æ–±—ã –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é, —É–∫–∞–∂–∏—Ç–µ auth_cookies –≤ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏")
        return True

    test_url = "https://czbooks.net/n/ul6pe"

    print(f"\nüìö –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π")
    parser = create_parser('czbooks', auth_cookies=auth_cookies)

    try:
        print(f"\nüìñ –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π...")
        book_info = parser.get_book_info(test_url)

        print(f"   ‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ: {book_info['title']}")
        print(f"   ‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!")

    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return False

    finally:
        parser.close()

    return True


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("\n" + "=" * 70)
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï CZBOOKS PARSER")
    print("=" * 70)

    results = {
        'factory': False,
        'basic': False,
        'proxy': False,
        'auth': False
    }

    # –¢–µ—Å—Ç 1: –§–∞–±—Ä–∏–∫–∞ –ø–∞—Ä—Å–µ—Ä–æ–≤
    try:
        test_parser_factory()
        results['factory'] = True
    except Exception as e:
        print(f"\n‚ùå –¢–µ—Å—Ç —Ñ–∞–±—Ä–∏–∫–∏ –ø—Ä–æ–≤–∞–ª–µ–Ω: {e}")
        import traceback
        traceback.print_exc()

    # –¢–µ—Å—Ç 2: –ë–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
    try:
        results['basic'] = test_czbooks_parser_basic()
    except Exception as e:
        print(f"\n‚ùå –ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω: {e}")
        import traceback
        traceback.print_exc()

    # –¢–µ—Å—Ç 3: –ü—Ä–æ–∫—Å–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    try:
        results['proxy'] = test_czbooks_with_proxy()
    except Exception as e:
        print(f"\n‚ùå –¢–µ—Å—Ç –ø—Ä–æ–∫—Å–∏ –ø—Ä–æ–≤–∞–ª–µ–Ω: {e}")

    # –¢–µ—Å—Ç 4: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    try:
        results['auth'] = test_czbooks_with_auth()
    except Exception as e:
        print(f"\n‚ùå –¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–≤–∞–ª–µ–Ω: {e}")

    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 70)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("=" * 70)

    print(f"\n   {'–¢–µ—Å—Ç':<30} {'–†–µ–∑—É–ª—å—Ç–∞—Ç':<20}")
    print(f"   {'-' * 50}")
    print(f"   {'–§–∞–±—Ä–∏–∫–∞ –ø–∞—Ä—Å–µ—Ä–æ–≤':<30} {'‚úÖ –ü—Ä–æ–π–¥–µ–Ω' if results['factory'] else '‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω':<20}")
    print(f"   {'–ë–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª':<30} {'‚úÖ –ü—Ä–æ–π–¥–µ–Ω' if results['basic'] else '‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω':<20}")
    print(f"   {'SOCKS –ø—Ä–æ–∫—Å–∏':<30} {'‚úÖ –ü—Ä–æ–π–¥–µ–Ω' if results['proxy'] else '‚ö†Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω':<20}")
    print(f"   {'–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è':<30} {'‚úÖ –ü—Ä–æ–π–¥–µ–Ω' if results['auth'] else '‚ö†Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω':<20}")

    # –ü–æ–¥—Å—á–µ—Ç —É—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ)
    mandatory_tests = ['factory', 'basic']
    passed = sum(1 for test in mandatory_tests if results[test])
    total = len(mandatory_tests)

    print(f"\n   –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ: {passed}/{total}")

    if passed == total:
        print(f"\n‚úÖ –í–°–ï –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("=" * 70)
        return 0
    else:
        print(f"\n‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´")
        print("=" * 70)
        return 1


if __name__ == "__main__":
    sys.exit(main())
