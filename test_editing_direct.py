#!/usr/bin/env python3

import sys
import os
sys.path.append('/home/user/novelbins-epub/web_app')

from app import create_app, db
from app.models import Novel, Chapter, Task
from app.services.translator_service import TranslatorService
from app.services.editor_service import EditorService
import time

app = create_app()

with app.app_context():
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ä–µ–¥–∞–∫—Ç—É—Ä—ã –Ω–∞–ø—Ä—è–º—É—é...")
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–µ–ª–ª—É
    novel = Novel.query.get(2)
    if not novel:
        print("‚ùå –ù–æ–≤–µ–ª–ª–∞ —Å ID 2 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        exit(1)
    
    print(f"üìñ –ù–∞–π–¥–µ–Ω–∞ –Ω–æ–≤–µ–ª–ª–∞: {novel.title}")
    
    # –ü–æ–ª—É—á–∞–µ–º –≥–ª–∞–≤—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç—É—Ä—ã
    chapters = Chapter.query.filter_by(
        novel_id=2,
        status='translated',
        is_active=True
    ).order_by(Chapter.chapter_number).all()
    
    print(f"üîç –ù–∞–π–¥–µ–Ω–æ –≥–ª–∞–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç—É—Ä—ã: {len(chapters)}")
    for ch in chapters:
        print(f"  - –ì–ª–∞–≤–∞ {ch.chapter_number}: {ch.original_title} (—Å—Ç–∞—Ç—É—Å: {ch.status})")
    
    if not chapters:
        print("‚ùå –ù–µ—Ç –≥–ª–∞–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç—É—Ä—ã")
        exit(1)
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É —Ä–µ–¥–∞–∫—Ç—É—Ä—ã
    task = Task(
        novel_id=2,
        task_type='editing',
        priority=2
    )
    db.session.add(task)
    db.session.commit()
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞ —Ä–µ–¥–∞–∫—Ç—É—Ä—ã —Å ID: {task.id}")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
    translator_service = TranslatorService()
    editor_service = EditorService(translator_service)
    
    total_chapters = len(chapters)
    success_count = 0
    
    print(f"üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–µ–¥–∞–∫—Ç—É—Ä—É {total_chapters} –≥–ª–∞–≤")
    
    for i, chapter in enumerate(chapters, 1):
        try:
            print(f"üìù –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –≥–ª–∞–≤—É {chapter.chapter_number} ({i}/{total_chapters})")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
            progress = (i / total_chapters) * 100
            task.update_progress(progress / 100, f"–†–µ–¥–∞–∫—Ç—É—Ä–∞ –≥–ª–∞–≤—ã {chapter.chapter_number}")
            
            # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –≥–ª–∞–≤—É
            success = editor_service.edit_chapter(chapter)
            if success:
                success_count += 1
                print(f"‚úÖ –ì–ª–∞–≤–∞ {chapter.chapter_number} –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∞")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç—É—Ä—ã –≥–ª–∞–≤—ã {chapter.chapter_number}")
            
            time.sleep(2)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –≥–ª–∞–≤–∞–º–∏
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç—É—Ä—ã –≥–ª–∞–≤—ã {i}: {e}")
            continue
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≥–ª–∞–≤
    if success_count > 0:
        novel.edited_chapters = success_count
        db.session.add(novel)
        db.session.commit()
        print(f"üìä –û–±–Ω–æ–≤–ª–µ–Ω —Å—á–µ—Ç—á–∏–∫ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≥–ª–∞–≤: {success_count}")
    
    # –ó–∞–≤–µ—Ä—à–∞–µ–º –∑–∞–¥–∞—á—É
    if success_count == total_chapters:
        task.complete(f"–†–µ–¥–∞–∫—Ç—É—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {success_count}/{total_chapters} –≥–ª–∞–≤")
    else:
        task.complete(f"–†–µ–¥–∞–∫—Ç—É—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏: {success_count}/{total_chapters} –≥–ª–∞–≤")
    
    print(f"‚úÖ –†–µ–¥–∞–∫—Ç—É—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {success_count}/{total_chapters} –≥–ª–∞–≤") 