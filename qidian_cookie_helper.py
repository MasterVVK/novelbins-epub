#!/usr/bin/env python3
"""
–ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è cookies Qidian –≤—Ä—É—á–Ω—É—é
"""
import json

def create_cookie_template():
    """–°–æ–∑–¥–∞–µ—Ç —à–∞–±–ª–æ–Ω –¥–ª—è –≤–≤–æ–¥–∞ cookies"""
    print("üç™ –ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ cookies Qidian")
    print("=" * 60)
    print()
    print("üìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –≤–æ–π–¥–∏—Ç–µ –Ω–∞ https://www.qidian.com")
    print("2. –ù–∞–∂–º–∏—Ç–µ F12 (–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞)")
    print("3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É 'Application' –∏–ª–∏ '–•—Ä–∞–Ω–∏–ª–∏—â–µ'")
    print("4. –ù–∞–π–¥–∏—Ç–µ 'Cookies' ‚Üí 'https://www.qidian.com'")
    print("5. –ù–∞–π–¥–∏—Ç–µ –∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–∏—Ö cookies:")
    print()
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ cookies, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω—ã –¥–ª—è Qidian
    required_cookies = [
        'kf_uid',           # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        'kf_token',         # –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        '_csrfToken',       # CSRF —Ç–æ–∫–µ–Ω
        'QDuid',            # Qidian User ID
        'QDpassport',       # –ü–∞—Å–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    ]
    
    optional_cookies = [
        'QDloginUserType',  # –¢–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        'QDbookshelf',      # –ö–Ω–∏–∂–Ω–∞—è –ø–æ–ª–∫–∞
        'newstatisticUUID', # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    ]
    
    cookies_dict = {}
    
    print("üîê –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï COOKIES:")
    for cookie_name in required_cookies:
        print(f"\n{cookie_name}:")
        value = input(f"–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è {cookie_name} (–∏–ª–∏ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): ").strip()
        if value:
            cookies_dict[cookie_name] = value
            print(f"‚úÖ {cookie_name} –¥–æ–±–∞–≤–ª–µ–Ω")
        else:
            print(f"‚ö†Ô∏è {cookie_name} –ø—Ä–æ–ø—É—â–µ–Ω")
    
    print(f"\nüìé –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï COOKIES (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):")
    for cookie_name in optional_cookies:
        value = input(f"–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è {cookie_name} (–∏–ª–∏ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): ").strip()
        if value:
            cookies_dict[cookie_name] = value
            print(f"‚úÖ {cookie_name} –¥–æ–±–∞–≤–ª–µ–Ω")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º cookies
    if cookies_dict:
        with open('qidian_cookies.json', 'w', encoding='utf-8') as f:
            json.dump(cookies_dict, f, indent=2, ensure_ascii=False)
        
        print(f"\nüíæ Cookies —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ qidian_cookies.json")
        print(f"üìä –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ cookies: {len(cookies_dict)}")
        print("\n‚úÖ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å test_qidian_api.py")
        
        return True
    else:
        print("\n‚ö†Ô∏è –ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ cookie")
        return False

def show_browser_guide():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤"""
    print("\nüìñ –ü–û–î–†–û–ë–ù–ê–Ø –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ë–†–ê–£–ó–ï–†–ê–ú:")
    print("=" * 60)
    
    print("\nüîµ GOOGLE CHROME:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ https://www.qidian.com –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å")
    print("2. –ù–∞–∂–º–∏—Ç–µ F12")
    print("3. –í–∫–ª–∞–¥–∫–∞ 'Application' ‚Üí 'Storage' ‚Üí 'Cookies' ‚Üí 'https://www.qidian.com'")
    print("4. –ù–∞–π–¥–∏—Ç–µ –Ω—É–∂–Ω—ã–µ cookies –≤ —Å–ø–∏—Å–∫–µ")
    print("5. –î–≤–∞–∂–¥—ã –∫–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ 'Value' —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å")
    
    print("\nü¶ä MOZILLA FIREFOX:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ https://www.qidian.com –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å")
    print("2. –ù–∞–∂–º–∏—Ç–µ F12")
    print("3. –í–∫–ª–∞–¥–∫–∞ '–•—Ä–∞–Ω–∏–ª–∏—â–µ' ‚Üí '–ö—É–∫–∏' ‚Üí 'https://www.qidian.com'")
    print("4. –ù–∞–π–¥–∏—Ç–µ –Ω—É–∂–Ω—ã–µ cookies")
    print("5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è")
    
    print("\nüåä MICROSOFT EDGE:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ https://www.qidian.com –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å")
    print("2. –ù–∞–∂–º–∏—Ç–µ F12")
    print("3. –í–∫–ª–∞–¥–∫–∞ 'Application' ‚Üí 'Cookies' ‚Üí 'https://www.qidian.com'")
    print("4. –ù–∞–π–¥–∏—Ç–µ –Ω—É–∂–Ω—ã–µ cookies")
    print("5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è")

def verify_cookies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ cookies"""
    try:
        with open('qidian_cookies.json', 'r', encoding='utf-8') as f:
            cookies = json.load(f)
        
        print("\nüîç –ü–†–û–í–ï–†–ö–ê –°–û–•–†–ê–ù–ï–ù–ù–´–• COOKIES:")
        print("=" * 60)
        
        if not cookies:
            print("‚ùå –§–∞–π–ª cookies –ø—É—Å—Ç")
            return False
        
        required_cookies = ['kf_uid', 'kf_token', '_csrfToken', 'QDuid']
        found_cookies = []
        missing_cookies = []
        
        for cookie_name in required_cookies:
            if cookie_name in cookies and cookies[cookie_name]:
                found_cookies.append(cookie_name)
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
                value = cookies[cookie_name]
                masked_value = value[:4] + "..." + value[-4:] if len(value) > 8 else "***"
                print(f"‚úÖ {cookie_name}: {masked_value}")
            else:
                missing_cookies.append(cookie_name)
                print(f"‚ùå {cookie_name}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   –ù–∞–π–¥–µ–Ω–æ: {len(found_cookies)}/{len(required_cookies)} –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö cookies")
        print(f"   –í—Å–µ–≥–æ cookies: {len(cookies)}")
        
        if len(found_cookies) >= 2:  # –•–æ—Ç—è –±—ã 2 –æ—Å–Ω–æ–≤–Ω—ã—Ö cookie
            print("\n‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ cookies –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return True
        else:
            print("\n‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ cookies. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å:")
            for cookie in missing_cookies:
                print(f"   - {cookie}")
            return False
            
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª qidian_cookies.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ cookies: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    print("üöÄ Qidian Cookie Helper")
    print("=" * 60)
    print()
    print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
    print("1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å cookies –≤—Ä—É—á–Ω—É—é")
    print("2. –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –±—Ä–∞—É–∑–µ—Ä–∞–º")
    print("3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ cookies")
    print("4. –í—ã—Ö–æ–¥")
    
    while True:
        choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (1-4): ").strip()
        
        if choice == '1':
            create_cookie_template()
            break
        elif choice == '2':
            show_browser_guide()
        elif choice == '3':
            verify_cookies()
        elif choice == '4':
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 4.")

if __name__ == "__main__":
    main()