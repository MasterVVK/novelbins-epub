#!/usr/bin/env python3
"""
–£–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–∏—Ö —Ç–µ—Ö–Ω–∏–∫ –∏–∑ –≥–ª–æ—Å—Å–∞—Ä–∏—è
"""
import sys
sys.path.insert(0, '/home/user/novelbins-epub/web_app')

from app import create_app, db
from app.models import Novel, GlossaryItem
import re

def remove_techniques():
    """–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã—Ö –∏ –æ–±—â–∏—Ö —Ç–µ—Ö–Ω–∏–∫"""
    
    app = create_app()
    with app.app_context():
        novel = Novel.query.filter(Novel.title.like('%–∑–∞–ø–µ—á–∞—Ç–∞—Ç—å%')).first()
        
        if not novel:
            print("‚ùå –ù–æ–≤–µ–ª–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫ –¥–ª—è: {novel.title}")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏
        techniques = GlossaryItem.query.filter_by(
            novel_id=novel.id,
            category='techniques',
            is_active=True
        ).all()
        
        print(f"\nüìä –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–µ—Ö–Ω–∏–∫: {len(techniques)}")
        
        # –ö—Ä–∏—Ç–µ—Ä–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        remove_criteria = {
            # –ü—Ä–æ—Å—Ç—ã–µ —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∞—Ç–∞–∫–∏
            'simple_elemental': [
                r'–≤–æ–¥–Ω.* —à–∞—Ä', r'–æ–≥–Ω–µ–Ω.* —à–∞—Ä', r'–≤–µ—Ç—Ä—è–Ω.* –ª–µ–∑–≤–∏–µ', r'–≥—Ä–æ–º–æ–≤.* —à–∞—Ä',
                r'–æ–≥–Ω–µ–Ω.* –∑–º–µ[—è–∏]', r'—Ç—É–º–∞–Ω–Ω.* –∑–º–µ[—è–∏]', r'—Å–≤–µ—Ç–æ–≤–æ–π —Å—Ç–æ–ª–±',
                r'–¥–æ–∂–¥–µ–≤.* —Å—Ç—Ä–µ–ª', r'–æ–≥–Ω–µ–Ω.* –ø–∏—Ç–æ–Ω', r'–º–µ—á–µ–≤.* –¥–æ–∂–¥—å'
            ],
            # –ü—Ä–æ—Å—Ç—ã–µ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
            'simple_physical': [
                r'^—É–¥–∞—Ä', r'^–∞—Ç–∞–∫–∞', r'^–±—Ä–æ—Å–æ–∫', r'^—Ç–æ–ª—á–æ–∫', r'^–ø—Ä—ã–∂–æ–∫',
                r'^–±–ª–æ–∫', r'^–∑–∞—â–∏—Ç–∞', r'^—É–∫–ª–æ–Ω–µ–Ω–∏–µ', r'^—Ä—ã–≤–æ–∫'
            ],
            # –û–±—â–∏–µ –±–æ–µ–≤—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏
            'generic_combat': [
                r'–ø–æ–ª–µ—Ç –Ω–∞ –º–µ—á–µ', r'–∑–∞—â–∏—Ç–Ω.* –±–∞—Ä—å–µ—Ä', r'–∑–∞—â–∏—Ç–Ω.* —à—Ç–æ—Ä–º',
                r'—Å–≤–µ—Ç–æ–≤–æ–π –±–∞—Ä—å–µ—Ä', r'–∑–æ–ª–æ—Ç.* –±–∞—Ä—å–µ—Ä', r'–∫–æ–Ω—Ç—Ä–∞—Ç–∞–∫–∞',
                r'–∫–æ–ª–ª–∞–ø—Å –∏ –≤–∑—Ä—ã–≤', r'–æ–¥–∏–Ω —É–¥–∞—Ä', r'—Å–∫—Ä—ã—Ç.* –∞—Ç–∞–∫–∞'
            ],
            # –¶–≤–µ—Ç–æ–≤—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏ –±–µ–∑ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∏
            'color_variations': [
                r'^–ø—É—Ä–ø—É—Ä–Ω.* –≤–∏—Ö—Ä—å$', r'^—á–µ—Ä–Ω.* —à—Ç–æ—Ä–º$', r'^–∑–æ–ª–æ—Ç.* –ª–µ–≤$',
                r'^–ø—É—Ä–ø—É—Ä–Ω.* –ª–∞–¥–æ–Ω—å$', r'^—á–µ—Ä–Ω.* —Å–∫–æ—Ä–ø–∏–æ–Ω$'
            ]
        }
        
        # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –°–û–•–†–ê–ù–ï–ù–ò–Ø —Ç–µ—Ö–Ω–∏–∫
        keep_keywords = [
            '–∏—Å–∫—É—Å—Å—Ç–≤–æ', '–º–∞—Å—Å–∏–≤', '—Ñ–æ—Ä–º–∞—Ü–∏—è', '–ø–µ—á–∞—Ç—å', '—Å—É—Ç—Ä–∞',
            '–º–µ—Ç–æ–¥', '–ø—É—Ç—å', '–¥–∞–æ', '—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è', '–ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏–µ',
            '–±–æ–∂–µ—Å—Ç–≤–µ–Ω', '–Ω–µ–±–µ—Å–Ω', '–¥–µ–º–æ–Ω–∏—á', '–¥—å—è–≤–æ–ª—å—Å–∫', '–¥—Ä–µ–≤–Ω',
            '–±–µ—Å—Å–º–µ—Ä—Ç–Ω', '–∑–∞–ø—Ä–µ—Ç–Ω', '—Ç–∞–π–Ω', '—Å–µ–∫—Ä–µ—Ç–Ω', '–≤–µ–ª–∏–∫–∏–π'
        ]
        
        to_remove = []
        kept_important = []
        
        for tech in techniques:
            russian_lower = tech.russian_term.lower()
            chinese = tech.english_term
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–∂–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ (–≤—Å–µ–≥–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º)
            if any(kw in russian_lower for kw in keep_keywords):
                kept_important.append(tech)
                continue
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è
            should_remove = False
            removal_reason = ""
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
            for category, patterns in remove_criteria.items():
                for pattern in patterns:
                    if re.search(pattern, russian_lower):
                        should_remove = True
                        removal_reason = category
                        break
                if should_remove:
                    break
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
            if not should_remove:
                # –ö–æ—Ä–æ—Ç–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –±–µ–∑ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∏ (2 —Å–∏–º–≤–æ–ª–∞)
                if len(chinese) <= 2:
                    should_remove = True
                    removal_reason = "short_generic"
                # –ü—Ä–æ—Å—Ç—ã–µ —á–∏—Å–ª–æ–≤—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏
                elif re.search(r'^(–ø–µ—Ä–≤|–≤—Ç–æ—Ä|—Ç—Ä–µ—Ç|—á–µ—Ç–≤–µ—Ä—Ç|–ø—è—Ç).* —É–¥–∞—Ä', russian_lower):
                    should_remove = True
                    removal_reason = "numbered_strikes"
            
            if should_remove:
                to_remove.append((tech, removal_reason))
        
        # –í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        print(f"\nüìã –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù:")
        print(f"  - –¢–µ—Ö–Ω–∏–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: {len(to_remove)}")
        print(f"  - –í–∞–∂–Ω—ã—Ö —Ç–µ—Ö–Ω–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {len(kept_important)}")
        print(f"  - –û—Å—Ç–∞–Ω–µ—Ç—Å—è —Ç–µ—Ö–Ω–∏–∫: {len(techniques) - len(to_remove)}")
        
        # –ü—Ä–∏–º–µ—Ä—ã —Ç–µ—Ö–Ω–∏–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        print(f"\nüóëÔ∏è –ü–†–ò–ú–ï–†–´ –¢–ï–•–ù–ò–ö –î–õ–Ø –£–î–ê–õ–ï–ù–ò–Ø:")
        
        categories_count = {}
        for tech, reason in to_remove[:30]:
            if reason not in categories_count:
                categories_count[reason] = 0
                print(f"\n  [{reason}]:")
            if categories_count[reason] < 5:
                print(f"    {tech.english_term} ‚Üí {tech.russian_term}")
                categories_count[reason] += 1
        
        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
        print(f"\nüóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ {len(to_remove)} —Ç–µ—Ö–Ω–∏–∫...")
        
        removed_count = 0
        for tech, _ in to_remove:
            tech.is_active = False
            removed_count += 1
        
        db.session.commit()
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        remaining = GlossaryItem.query.filter_by(
            novel_id=novel.id,
            category='techniques', 
            is_active=True
        ).count()
        
        print(f"\n‚úÖ –£–î–ê–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        print(f"  - –£–¥–∞–ª–µ–Ω–æ —Ç–µ—Ö–Ω–∏–∫: {removed_count}")
        print(f"  - –û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–µ—Ö–Ω–∏–∫: {remaining}")
        print(f"  - –ü—Ä–æ—Ü–µ–Ω—Ç —É–¥–∞–ª–µ–Ω–∏—è: {removed_count/len(techniques)*100:.1f}%")
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
        with open('/home/user/novelbins-epub/techniques_removal_report.txt', 'w', encoding='utf-8') as f:
            f.write(f"–û–¢–ß–ï–¢ –û–ë –£–î–ê–õ–ï–ù–ò–ò –¢–ï–•–ù–ò–ö\n")
            f.write(f"{'=' * 50}\n\n")
            f.write(f"–ë—ã–ª–æ —Ç–µ—Ö–Ω–∏–∫: {len(techniques)}\n")
            f.write(f"–£–¥–∞–ª–µ–Ω–æ: {removed_count}\n")
            f.write(f"–û—Å—Ç–∞–ª–æ—Å—å: {remaining}\n\n")
            
            f.write("–£–î–ê–õ–ï–ù–ù–´–ï –¢–ï–•–ù–ò–ö–ò –ü–û –ö–ê–¢–ï–ì–û–†–ò–Ø–ú:\n")
            current_reason = None
            for tech, reason in to_remove:
                if reason != current_reason:
                    f.write(f"\n[{reason}]\n")
                    current_reason = reason
                f.write(f"  {tech.english_term} ‚Üí {tech.russian_term}\n")
        
        print(f"\nüíæ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ techniques_removal_report.txt")

if __name__ == '__main__':
    remove_techniques()